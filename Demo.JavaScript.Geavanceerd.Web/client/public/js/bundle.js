(()=>{var e={418:()=>{function e(e){for(let o=0;o<e.length;o++)console.log("  "+e[o])}console.info("********"),console.info("array.js"),console.info("********");let o=["C# basis","C# gevorderd","Front end basis","Front end gevorderd"];console.log("Cursussen:"),e(o),console.log("courses 1st element: "+o[0]),console.log("courses last element: "+o[o.length-1]),console.info("--- push/pop ---"),o.push("foutje"),o.pop(),o.push("Databases basis"),o.push("Databases gevorderd"),e(o),console.info("--- Array.isArray ---"),console.log("Array.isArray(123): "+Array.isArray(123)),console.log("Array.isArray('tekstje'): "+Array.isArray("tekstje")),console.log("Array.isArray(true): "+Array.isArray(!0)),console.log("Array.isArray(courses): "+Array.isArray(o)),console.info("--- properties en methods ---"),console.log("courses.length: "+o.length),console.log("forEach:"),o.forEach(((e,o)=>{console.log(`Course at index ${o}: ${e}`)})),console.log("Database courses: "+o.filter((e=>e.indexOf("Databases")>=0))),console.log("Database courses TO UPPER: "+o.map((e=>e.toUpperCase())))},985:()=>{console.info("**********"),console.info("boolean.js"),console.info("**********");console.log("Deze code zal wel uitgevoerd worden..."),console.log(),console.info("--- conditionele operatoren ---");let e=!1;e&&console.log("Deze code zal niet uitgevoerd worden."),e=!0,e&&console.log("Deze code zal wel uitgevoerd worden."),console.log(),console.info("--- boolse operatoren ---"),console.log("Deze code zal wel uitgevoerd worden (want !false is hetzelfde als true)"),console.log("Deze code zal wel uitgevoerd worden (want false || true is true)"),console.log(),console.info("--- falsy en truthy ---"),console.log("Deze code zal wel uitgevoerd worden want de voorwaarde is truthy (alle numbers verschillend van 0 zijn truthy)."),console.log("Deze code zal wel uitgevoerd worden want de voorwaarde is truthy (een niet-lege string is truthy)."),console.log(),console.info("--- == vs === ---"),console.log("Deze if-tak zal uitgevoerd worden."),console.log("En deze if-tak ook!")},227:()=>{console.info("*******"),console.info("date.js"),console.info("*******");let e=new Date,o=new Date(0),n=new Date(1969,6,1);console.log("now: "+e),console.log("startOfTheSeventies: "+o),console.log("startOfTheSummerOf69: "+n)},74:()=>{function e(e,o){return e+o}console.info("***********"),console.info("function.js"),console.info("***********");let o=e(),n=e(1),t=e(1,1),s=e(1,1);function l(e,o){return e||(e=0),o||(o=0),e+o}console.log("resultOfFunctionWith0Arguments: "+o),console.log("resultOfFunctionWith1Argument: "+n),console.log("resultOfFunctionWith2Arguments: "+t),console.log("resultOfFunctionWith3Arguments: "+s),o=l(),n=l(1),console.log("resultOfFunctionWith0Arguments: "+o),console.log("resultOfFunctionWith1Argument: "+n),console.info("--- variadic function ---"),s=function(){let e=0;for(let o=0;o<arguments.length;o++)e+=arguments[o];return e}(1,1,1),console.log("resultOfFunctionWith3Arguments: "+s)},913:()=>{console.info("*******"),console.info("null.js"),console.info("*******");let e=123;console.log("variabele: "+e),e=null,console.log("variabele: "+e)},949:()=>{console.info("*********"),console.info("number.js"),console.info("*********");let e=Math.random();console.log("PI: 3.14"),console.log("dozijn: 12"),console.log("willekeurigGetal: "+e),console.info("--- isNaN() ---"),console.log("isNaN('tekstje'): "+isNaN("tekstje")),console.log("isNaN(true): "+isNaN(!0)),console.log("isNaN(3): "+isNaN(3)),console.log("isNaN('3'): "+isNaN("3")),console.info("--- parseInt()/parseFloat() ---"),console.log("parseInt('123'): "+parseInt("123")),console.log("parseFloat('123,45'): "+parseFloat("123,45")),console.log("parseFloat('123.45'): "+parseFloat("123.45")),console.log("parseFloat('   123.45   '): "+parseFloat("   123.45   "))},222:()=>{console.info("*********"),console.info("object.js"),console.info("*********"),console.info("--- object literal ---");let e={_property1:"Als een property start met _: niet gebruiken, da's privé! Gebruik de get/set accessors.",get property1(){return this._property1},set property1(e){if(!e)throw"Gelieve een string van minstens één character in te stellen";this._property1=e},property2:"Dit is wel publiek.",toString:function(){return`property1: ${this.property1}, property2: ${this.property2}`}};e.property1="Dit is",e.property2="een test.",console.log("objectLiteral: "+e.toString()),console.info("--- object from class ---");class o{constructor(){this._field1="Als een field start met _: niet gebruiken, da's privé! Gebruik de get/set accessors.",this.field2="Dit is wel publiek."}get property1(){return this._field1}set property1(e){if(!e)throw"Gelieve een string van minstens één character in te stellen";this._field1=e}toString(){return`_field1: ${this._field1}, field2: ${this.field2}`}}class n{#e;field2;constructor(){this.#e="Dit is een echte private field",this.field2="Dit is een public field"}get property1(){return this.field1}set property1(e){if(!e)throw"Gelieve een string van minstens één character in te stellen";this.field1=e}toString(){return`#field1: ${this.#e}, field2: ${this.field2}`}}let t=[];for(let e=0;e<5;e++){let n=new o;n.property1="Dit is",n._field1="Dit is",n.field2="test nummer "+e+".",t.push(n)}for(let e=0;e<t.length;e++)console.log("Object "+e+": "+t[e].toString());let s=[];for(let e=0;e<5;e++){let o=new n;o.property1="Dit is",o.field2="test nummer "+e+".",s.push(o)}for(let e=0;e<s.length;e++)console.log("Object with private field "+e+": "+t[e].toString())},529:()=>{console.info("*********"),console.info("regexp.js"),console.info("*********");let e=/upperorlower/i;console.log("Er is een match op positie: "+"Bevat dit UpPerORLower?".search(e)),console.log("Vervangen van de match met de lege string: "+"Bevat dit UpPerORLower?".replace(e,""))},869:()=>{console.info("*********"),console.info("string.js"),console.info("*********");let e='Dit is een string met "dubbele" quotes.',o="Dit is een string met 'single' quotes.";console.log(e),console.log(o),console.log('Je kan ook "mixen". Geen gedoe met escaping :)'),console.log("Dit is een string met backticks.\nHet coole aan de backticks is dat je de string over meerdere\nlijnen kan uitschrijven. En je hebt ook nog zoiets als interpolation:\ndeze variabele werd in de string geïnterpoleerd: 42.\nThe power of backticks dus!"),console.info("--- string concatenatie ---"),console.log("Geconcateneerd: "+e+" "+o),console.info("--- properties and methods ---"),console.log("length of string1: "+e.length),console.log("positie van 'met' in string1: "+e.indexOf("met"))},59:()=>{console.info("************"),console.info("undefined.js"),console.info("************"),console.log("variabeleDieNogGeenWaardeHeeftGekregen: "+void 0),console.log("resultaatVanFunctieDieNietsTeruggeeft: "+undefined),console.log("argument a: 123"),console.log("argument b: "+undefined)}},o={};function n(t){var s=o[t];if(void 0!==s)return s.exports;var l=o[t]={exports:{}};return e[t](l,l.exports,n),l.exports}n.n=e=>{var o=e&&e.__esModule?()=>e.default:()=>e;return n.d(o,{a:o}),o},n.d=(e,o)=>{for(var t in o)n.o(o,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},n.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),(()=>{"use strict";n(985),n(869),n(949),n(59),n(913),n(418),n(227),n(74),n(222),n(529)})()})();
//# sourceMappingURL=bundle.js.map